rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 5, 20);
    }

    // Pour la collection users : chaque utilisateur ne peut lire/Ã©crire que son propre doc
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Pour la collection transactions
    match /transactions/{transactionId} {
      allow read, write: if request.auth != null;
    }

    // Pour la collection budgets
    match /budgets/{budgetId} {
      allow read, write: if request.auth != null;
    }

    // Pour la collection categories
    match /categories/{categoryId} {
      allow read, write: if request.auth != null;
    }

    // Pour la collection notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null;
    }

    // Pour la collection recurrent
    match /recurrent/{docId} {
      allow read, write: if request.auth != null;
    }

    // Pour la collection xfois
    match /xfois/{docId} {
      allow read, write: if request.auth != null;
    }
    
    // Pour la collection depense
    match /depense/{docId} {
      allow read, write: if request.auth != null;
    }
    
    // Pour la collection revenu
    match /revenu/{docId} {
      allow read, write: if request.auth != null;
    }
  }
}